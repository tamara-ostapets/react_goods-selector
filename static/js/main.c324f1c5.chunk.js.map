{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","allGoods","selectedGoods","toggleClass","e","target","parentNode","classList","toggle","clearAll","document","querySelectorAll","map","element","setState","addSelected","good","prevState","removeSelected","newState","splice","indexOf","selected","this","className","length","key","type","onClick","includes","React","Component","ReactDOM","render","getElementById"],"mappings":"sOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA6GaC,E,4MAzGbC,MAAQ,CACNC,SAAUH,EACVI,cAAe,I,EAGjBC,YAAc,SAACC,GACIA,EAAEC,OAAOC,WAEjBC,UAAUC,OAAO,2B,EAG5BC,SAAW,WAEa,YAAOC,SAASC,iBAAiB,4BAGtCC,KAAI,SAAAC,GAAO,OAAIA,EAAQN,UAAUC,OAAO,6BAEzD,EAAKM,SAAS,CACZZ,cAAe,M,EAInBa,YAAc,SAACX,EAAGY,GAChB,EAAKb,YAAYC,GAEjB,EAAKU,UAAS,SAAAG,GAAS,MAAK,CAC1Bf,cAAc,GAAD,mBAAMe,EAAUf,eAAhB,CAA+Bc,S,EAIhDE,eAAiB,SAACd,EAAGY,GACnB,EAAKb,YAAYC,GAEjB,IAAMe,EAAQ,YAAO,EAAKnB,MAAME,eAEhCiB,EAASC,OAAOD,EAASE,QAAQL,GAAO,GAExC,EAAKF,SAAS,CACZZ,cAAeiB,K,+DAKjB,IAAMG,EAAWZ,SAASC,iBAAiB,2BAE3CY,KAAKT,SAAS,CAAEZ,cAAeoB,M,+BAGvB,IAAD,SAC6BC,KAAKvB,MAAjCC,EADD,EACCA,SAAUC,EADX,EACWA,cAElB,OACE,yBAAKsB,UAAU,OACb,wBAAIA,UAAU,eAAd,iBAEG,IACAtB,EAAcuB,QAGhBvB,EAAcU,KAAI,SAAAI,GAAI,OACrB,0BACEU,IAAKV,EACLQ,UAAU,iBAFZ,UAIMR,EAJN,UAOF,6BACA,4BACEW,KAAK,SACLH,UAAU,oBACVI,QAASL,KAAKd,UAHhB,aAQA,wBAAIe,UAAU,aACXvB,EAASW,KAAI,SAAAI,GAAI,OAChB,wBACEQ,UAAU,iBACVE,IAAKV,GAEJA,EAED,4BACEQ,UAAU,wBACVG,KAAK,SACLC,QAAS,SAAAxB,GAAC,OAAKF,EAAc2B,SAASb,GAClC,EAAKE,eAAed,EAAGY,GACvB,EAAKD,YAAYX,EAAGY,KAL1B,6B,GAtFIc,IAAMC,WCZxBC,IAASC,OACP,kBAAC,EAAD,MACAvB,SAASwB,eAAe,U","file":"static/js/main.c324f1c5.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    allGoods: goodsFromServer,\n    selectedGoods: [],\n  }\n\n  toggleClass = (e) => {\n    const listItem = e.target.parentNode;\n\n    listItem.classList.toggle('App__list-item--active');\n  }\n\n  clearAll = () => {\n    // eslint-disable-next-line\n    const selectedElements = [...document.querySelectorAll('.App__list-item--active')];\n\n    // eslint-disable-next-line\n    selectedElements.map(element => element.classList.toggle('App__list-item--active'));\n\n    this.setState({\n      selectedGoods: [],\n    });\n  }\n\n  addSelected = (e, good) => {\n    this.toggleClass(e);\n\n    this.setState(prevState => ({\n      selectedGoods: [...prevState.selectedGoods, good],\n    }));\n  }\n\n  removeSelected = (e, good) => {\n    this.toggleClass(e);\n    // eslint-disable-next-line\n    const newState = [...this.state.selectedGoods];\n\n    newState.splice(newState.indexOf(good), 1);\n\n    this.setState({\n      selectedGoods: newState,\n    });\n  }\n\n  renderSelected() {\n    const selected = document.querySelectorAll('.App__list-item--active');\n\n    this.setState({ selectedGoods: selected });\n  }\n\n  render() {\n    const { allGoods, selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__header\">\n          Selected good:\n          {' '}\n          {selectedGoods.length}\n        </h1>\n\n        {selectedGoods.map(good => (\n          <span\n            key={good}\n            className=\"App__selected\"\n          >\n            {`${good}, `}\n          </span>\n        ))}\n        <br />\n        <button\n          type=\"button\"\n          className=\"App__clear-button\"\n          onClick={this.clearAll}\n        >\n          Clear all\n        </button>\n\n        <ul className=\"App__list\">\n          {allGoods.map(good => (\n            <li\n              className=\"App__list-item\"\n              key={good}\n            >\n              {good}\n\n              <button\n                className=\"App__list-item-button\"\n                type=\"button\"\n                onClick={e => (selectedGoods.includes(good)\n                  ? this.removeSelected(e, good)\n                  : this.addSelected(e, good))}\n              >\n\n                Select / Remove\n              </button>\n\n            </li>\n          ))}\n        </ul>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}